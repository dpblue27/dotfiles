[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  nmap <space> [denite]
  nnoremap [denite] <nop>

  " Change default options
  " call denite#custom#option('default', 'auto_preview', v:true)
  call denite#custom#option('default', 'highlight_matched_char', 'Type')
  call denite#custom#option('default', 'highlight_preview_line', 'Type')
  call denite#custom#option('default', 'highlight_mode_insert', 'None')

  " Use the sublime sorter by default.
  call denite#custom#source('_', 'sorters', ['sorter_sublime'])
  call denite#custom#source('_', 'converters', ['converter_relative_word'])

  " Use ag for file_rec
	call denite#custom#var('file_rec', 'command',
	                     \ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])

  " Restrict to current project for file_mru
  ""call denite#custom#source('file_mru', 'matchers',
                          ""\ ['matcher_project_files', 'matcher_fuzzy'])
  call denite#custom#source('line', 'matchers', ['matcher_fuzzy'])

	" Ag command on grep source
	call denite#custom#var('grep', 'command', ['ag'])
	call denite#custom#var('grep', 'default_opts', ['-i', '-t']) " ignore case, all text files
	call denite#custom#var('grep', 'recursive_opts', [])
	call denite#custom#var('grep', 'pattern_opt', [])
	call denite#custom#var('grep', 'separator', ['--'])
	call denite#custom#var('grep', 'final_opts', [])

  nnoremap <silent> [denite]<space> :<C-u>Denite -resume<cr><c-u>
  nnoremap <silent> [denite]/ :<C-u>Denite grep<cr>
  nnoremap <silent> [denite]b :<C-u>Denite buffer<cr>
  nnoremap <silent> [denite]c :<C-u>Denite change<cr>
  nnoremap <silent> [denite]C :<C-u>Denite command_history<cr>
  nnoremap <silent> [denite]f :<C-u>Denite file_rec<cr><c-u>
  nnoremap <silent> [denite]h :<C-u>Denite help<cr><c-u>
  nnoremap <silent> [denite]j :<C-u>Denite jump<cr>
  nnoremap <silent> [denite]l :<C-u>Denite line<cr>
  nnoremap <silent> [denite]m :<C-u>Denite file_mru<cr><c-u>
  nnoremap <silent> [denite]o :<C-u>Denite outline<cr>
  nnoremap <silent> [denite]r :<C-u>Denite register<cr>
  nnoremap <silent> [denite]t :<C-u>Denite -buffer-name=gtags_completion gtags_completion<cr>
  nnoremap <silent> [denite]y :<C-u>Denite neoyank -default-action=append<cr>
'''

[[plugins]]
repo = 'LuXuryPro/deoplete-rtags'
hook_add = '''
  let g:deoplete#sources.cpp = ['buffer', 'rtags']
'''

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_start_level=1
  let g:indent_guides_guide_size=1
  let g:indent_guides_enable_on_vim_startup=1
  let g:indent_guides_color_change_percent=3
  if !has('gui_running')
    let g:indent_guides_auto_colors=0
    function! s:indent_set_console_colors()
      hi IndentGuidesOdd ctermbg=235
      hi IndentGuidesEven ctermbg=236
    endfunction
    autocmd VimEnter,Colorscheme * call s:indent_set_console_colors()
  endif
'''

[[plugins]]
repo = 'google/vim-colorscheme-primary'
hook_add = '''
  set background=dark
  au MyAutoCmd VimEnter * nested colorscheme primary
'''

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'kmnk/vim-unite-svn'

[[plugins]]
repo = 'Shougo/vimshell.vim'

[[plugins]]
repo = 'jrosiek/vim-mark'
hook_add = '''
  let g:mwDefaultHighlightingPalette = 'maximum'
'''

[[plugins]]
repo = 'zhaocai/GoldenView.Vim'
hook_add = '''
  let g:goldenview__enable_at_startup = 0

  " 1. split to tiled windows
  nmap <silent> <C-L>  <Plug>GoldenViewSplit

  " 2. quickly switch current window with the main pane
  " and toggle back
  nmap <silent> <F8>   <Plug>GoldenViewSwitchMain
  nmap <silent> <S-F8> <Plug>GoldenViewSwitchToggle

  " 3. jump to next and previous window
  nmap <silent> <C-N>  <Plug>GoldenViewNext
  nmap <silent> <C-P>  <Plug>GoldenViewPrevious
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  map <leader>al :ALEToggle<cr>
'''
